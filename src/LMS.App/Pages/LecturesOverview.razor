@page "/lectures/{StepId:guid}"
@using LMS.App.Contracts
@using LMS.App.ViewModels

<div style="display: flex; justify-content: space-between">
    <h3>Lectures</h3>
    <div>
        <button class="btn btn-primary" @onclick="AddLecture">Add Lecture</button>
    </div>
</div>

<br />

@if (Lectures == null)
{
    <p><em>Loading...</em></p>
}
else if (Lectures.Count == 0)
{
    <p><em>No lectures found</em></p>
}
else
{
    <table>
        <thead>
        <tr>
            <th style="padding-right: 100px">Name</th>
            <th style="padding-right: 100px">URL</th>
            <th style="padding-right: 100px">Delete</th>
            <th style="padding-right: 100px">Edit</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var lecture in Lectures)
        {
            <tr>
                <td>@lecture.Name </td>
                <td>@lecture.Url</td>
                <td><button class="btn btn-link" @onclick="@((args) => DeleteLecture(lecture.Id))">Delete Lecture</button></td>
                <td><button class="btn btn-link" @onclick="@((args) => EditLecture(lecture.Id))">Edit Lecture</button></td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Inject]
    public ILectureDataService LectureDataService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }
    
    public List<LectureViewModel> Lectures { get; set; }


    //public List<LectureDto> Lectures { get; set; } 
    [Parameter]
    public Guid StepId { get; set; }
    //public LectureDto LectureDto { get; set; } = new LectureDto();

    public string Message { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Lectures = (await LectureDataService.GetLecturesAsync(StepId)).ToList();

    }

    private void EditLecture(Guid id)
    {
        NavigationManager.NavigateTo("/updatelecture/" + id.ToString());
    }
    
    private void AddLecture()
    {
        NavigationManager.NavigateTo("/addlecture/"+StepId.ToString());
    }
    
    private async void DeleteLecture(Guid id)
    {
        await LectureDataService.DeleteLectureAsync(id);

        NavigationManager.Refresh();
    }    
}